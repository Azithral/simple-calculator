{"version":3,"sources":["Calculator.js","App.js","index.js"],"names":["Calculator","useState","eqaution","setEquation","answer","setAnswer","eq_array","setEq_array","checkbracket","setCheckBracket","answered","setAnswered","prevAnswer","setPrevAnswer","status","setStatus","divisionSymbol","displayAnswer","Solve_expression","arr","i","length","modulo","String","Number","slice","division","product","addition","subtraction","useEffect","join","handle_number","num","newEq_array","handle_operator","op","push","className","type","value","disabled","readOnly","onChange","e","target","onClick","pop","bool","checkOperatorSyntax","checkPraenthsisSyntax","temp","bracket_start","ans","Solve","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5472e30c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Calculator = () => {\r\n\r\n    const [eqaution,setEquation] = useState('');\r\n    const [answer,setAnswer] = useState('');\r\n    const [eq_array, setEq_array] =  useState(['']);\r\n    const [checkbracket,setCheckBracket] = useState(0);\r\n    const [answered,setAnswered] = useState(false);\r\n    const [prevAnswer,setPrevAnswer] = useState(['']);\r\n    const [status, setStatus] = useState('success');\r\n\r\n    const divisionSymbol = '\\u{00F7}';\r\n    const eraseSymbol = '\\u{232B}';\r\n\r\n    let displayAnswer = '';\r\n    if(answered)\r\n    {\r\n        displayAnswer = answer;\r\n    }\r\n    else{\r\n        displayAnswer = '';\r\n    }\r\n\r\n    const checkPraenthsisSyntax = () => {\r\n        let bool = true;\r\n        if(checkbracket)\r\n        {\r\n            bool = false;\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    const checkOperatorSyntax = () => {\r\n        let bool = true;\r\n        for(let i = 0 ;i < eq_array.length -1;i++)\r\n        {\r\n            if(eq_array[i] === \"-\" && eq_array[i+1]===\"\")\r\n            {\r\n                bool = false;\r\n            }\r\n            else if(i>0 &&\r\n            (eq_array[i] === \"+\" ||\r\n            eq_array[i] === divisionSymbol ||\r\n            eq_array[i] === \"X\" ||\r\n            eq_array[i] === \"%\" ) && \r\n            (eq_array[i-1] === \"\" || eq_array[i+1] === \"\")){\r\n                bool = false;\r\n            }\r\n        }\r\n        return bool;\r\n    }\r\n\r\n    const Solve = () => {\r\n        let newEq_array = [...eq_array];\r\n        let bracket_start = 0;\r\n        let temp;\r\n        //console.log(newEq_array);\r\n        for(let i = 0;i< newEq_array.length;i++)\r\n        {\r\n            if(newEq_array[i] === ')')\r\n            {\r\n                //console.log(newEq_array.slice(bracket_start,i));\r\n                temp = Solve_expression(newEq_array.slice(bracket_start,i));\r\n                newEq_array = [...newEq_array.slice(0,bracket_start-1),temp,...newEq_array.slice(i+1,newEq_array.length)];\r\n                //console.log(temp,newEq_array);\r\n                i = -1;\r\n            }\r\n            else if(newEq_array[i] === '(')\r\n            {\r\n                bracket_start = i+1;\r\n            }\r\n            \r\n        }\r\n        let ans = Solve_expression(newEq_array);\r\n        setAnswer(ans);\r\n        setAnswered(true);\r\n        setPrevAnswer([ans]);\r\n\r\n    }\r\n\r\n    const Solve_expression = (arr) => {\r\n\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            if(arr[i] === '%'){\r\n                const modulo = String(Number(arr[i-1]) % Number(arr[i+1]));\r\n                arr = [...arr.slice(0,i-1),modulo,...arr.slice(i+2,arr.length)];\r\n                i = 0;\r\n            }         \r\n        }\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            if(arr[i] === divisionSymbol){\r\n                if(arr[i+1] === '0')\r\n                {\r\n                    arr=[''];\r\n                    setStatus('failure');\r\n                    return 'Cant divide by zero';\r\n                }\r\n                const division = String(Number(arr[i-1]) / Number(arr[i+1]));\r\n                arr = [...arr.slice(0,i-1),division,...arr.slice(i+2,arr.length)];\r\n                i = 0;\r\n            }         \r\n        }\r\n        \r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            if(arr[i] === 'X'){\r\n                const product = String(Number(arr[i-1]) * Number(arr[i+1]));\r\n                arr = [...arr.slice(0,i-1),product,...arr.slice(i+2,arr.length)];\r\n                i = 0;\r\n            } \r\n        }\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            if(arr[i] === '+' ){\r\n                const addition = String(Number(arr[i-1]) + Number(arr[i+1]));\r\n                arr = [...arr.slice(0,i-1),addition,...arr.slice(i+2,arr.length)];\r\n                i = 0;\r\n            }\r\n        }\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            if(arr[i] === '-' ){\r\n                const subtraction = String(Number(arr[i-1]) - Number(arr[i+1]));\r\n                arr = [...arr.slice(0,i-1),subtraction,...arr.slice(i+2,arr.length)];\r\n                i = 0;                \r\n            }\r\n        }\r\n        return arr[0];        \r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        setEquation(eq_array.join(' '));\r\n        //console.log(eq_array);       \r\n    },[eq_array]);\r\n\r\n    const handler_AC = () => {\r\n        setEq_array(['']);\r\n        setAnswer('');\r\n        setPrevAnswer('');\r\n        setCheckBracket(0);\r\n        setAnswered(false);\r\n    }\r\n\r\n    const handler_erase = () => {\r\n        const newEq_array = [...eq_array];\r\n        if(newEq_array[newEq_array.length-1] !== '')\r\n        {\r\n            newEq_array[newEq_array.length-1] = newEq_array[newEq_array.length-1].slice(0,-1);\r\n        }\r\n        else if(newEq_array.length >1 && newEq_array[newEq_array.length-1] === '')\r\n        {\r\n            if(newEq_array[newEq_array.length-2] === '(')\r\n            {\r\n                setCheckBracket(checkbracket-1);  \r\n                newEq_array.pop();\r\n                newEq_array.pop();\r\n                newEq_array.push('');\r\n            }\r\n            else if(newEq_array[newEq_array.length-2] === ')')\r\n            {\r\n                setCheckBracket(checkbracket+1);\r\n                newEq_array.pop();\r\n                newEq_array.pop();\r\n            }\r\n            else{\r\n                newEq_array.pop();\r\n                newEq_array.pop();\r\n            }\r\n            \r\n        }\r\n        setEq_array(newEq_array);\r\n    }\r\n\r\n\r\n    const handler_equal = () => {\r\n        if(checkOperatorSyntax() && checkPraenthsisSyntax())\r\n        {\r\n            setStatus('success'); \r\n            Solve();                       \r\n        }\r\n        else{\r\n            setAnswer('Syntax Error');\r\n            setAnswered(true);\r\n            setStatus('failure');\r\n        }\r\n        setEq_array(['']);       \r\n    }\r\n\r\n    const handle_number = (num) => {\r\n        setAnswered(false);\r\n        const newEq_array = [...eq_array.slice(0,eq_array.length-1), eq_array[eq_array.length-1] + num];\r\n        setEq_array(newEq_array);\r\n    }\r\n\r\n    const handle_operator = (op) => {\r\n        let newEq_array;\r\n        if(answered)\r\n        {\r\n            newEq_array = [...prevAnswer];\r\n        }\r\n        else{\r\n            newEq_array = [...eq_array];\r\n        } \r\n        setAnswered(false);       \r\n        if(newEq_array.length >=3 && \r\n            newEq_array[newEq_array.length-1] === '' && \r\n            (newEq_array[newEq_array.length-2] === '+' ||\r\n            newEq_array[newEq_array.length-2] === '-'  ||\r\n            newEq_array[newEq_array.length-2] === 'X'  ||\r\n            newEq_array[newEq_array.length-2] === divisionSymbol  ||\r\n            newEq_array[newEq_array.length-2] === '%'  )){\r\n            newEq_array[newEq_array.length-2] = op;\r\n        }\r\n        else if(newEq_array.length >=3 && \r\n            newEq_array[newEq_array.length-2] === ')' && \r\n            (newEq_array[newEq_array.length-1] === '+' ||\r\n            newEq_array[newEq_array.length-1] === '-'  ||\r\n            newEq_array[newEq_array.length-1] === 'X'  ||\r\n            newEq_array[newEq_array.length-1] === divisionSymbol  ||\r\n            newEq_array[newEq_array.length-1] === '%'  )){\r\n            newEq_array[newEq_array.length-1] = op;\r\n            newEq_array.push('');\r\n        }\r\n        else if(newEq_array[newEq_array.length-1] !== ''&& newEq_array[newEq_array.length-1] !== '('){\r\n            newEq_array.push(op);\r\n            newEq_array.push('');\r\n        }\r\n        else if(newEq_array[newEq_array.length-1] === '' && op==='-' && newEq_array[newEq_array.length-2]==='(')\r\n        {\r\n            newEq_array[newEq_array.length-1] = '-';           \r\n        }\r\n        else if(newEq_array[newEq_array.length-1] === '' && newEq_array[newEq_array.length-2]===')')\r\n        {\r\n            newEq_array[newEq_array.length-1] = op;\r\n            newEq_array.push('');\r\n        }\r\n        setEq_array(newEq_array);\r\n    }\r\n\r\n\r\n    const handle_parenthesis = () => {\r\n        setAnswered(false);\r\n        let newEq_array = [...eq_array];\r\n        if(checkbracket && newEq_array[newEq_array.length -2] === ')' )\r\n        {\r\n            newEq_array[newEq_array.length -1] = ')';\r\n            newEq_array.push('');\r\n            setCheckBracket(checkbracket-1);  \r\n        }\r\n        else if(checkbracket && (Number(newEq_array[newEq_array.length -1] ) || newEq_array[newEq_array.length -1] ==='0' ))\r\n        {\r\n            newEq_array.push(')');\r\n            newEq_array.push('');\r\n            setCheckBracket(checkbracket-1);  \r\n        }\r\n        else{         \r\n            if(newEq_array.length === 1)\r\n            {\r\n                if(newEq_array[0] === '')\r\n                {\r\n                    newEq_array[0] = '('; \r\n                    setCheckBracket(checkbracket+1);            \r\n                }\r\n                else{\r\n                    newEq_array.push('X','(');\r\n                    setCheckBracket(checkbracket+1);\r\n                }\r\n            }\r\n            else if(newEq_array[newEq_array.length -2] === ')'){\r\n                newEq_array[newEq_array.length -1] = 'X';\r\n                newEq_array.push('(');\r\n               \r\n            }\r\n            else if(newEq_array[newEq_array.length -1] ==='0' || Number(newEq_array[newEq_array.length - 1])  ){\r\n                newEq_array.push('X','(');\r\n               \r\n            }   \r\n            else{\r\n                newEq_array[newEq_array.length -1] = '(';\r\n            }\r\n            newEq_array.push('');      \r\n            setEq_array(newEq_array);\r\n            setCheckBracket(checkbracket+1);\r\n\r\n        }\r\n        setEq_array(newEq_array);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"calculator\"> \r\n            <div className=\"display\">\r\n                <input type=\"text\" className={status} value={displayAnswer} disabled readOnly></input>\r\n                <br/>\r\n                <input type=\"text\" className=\"equation\" value={eqaution} disabled readOnly onChange={(e) => setEquation(e.target.value)}></input>\r\n            </div>          \r\n            <div className=\"button_row\">\r\n                <button className=\"AC\" onClick={handler_AC}>AC</button>\r\n                <button className=\"erase\" onClick={handler_erase}>{eraseSymbol}</button>\r\n                <button className=\"operator\" onClick={()=> handle_operator('%')}>%</button>\r\n                <button className=\"operator\" onClick={()=> handle_operator(divisionSymbol)}>{divisionSymbol}</button>\r\n                \r\n            </div>\r\n            <div className=\"button_row\">\r\n                <button className=\"number\"  onClick={() => handle_number('7')}>7</button>\r\n                <button className=\"number\" onClick={() => handle_number('8')}>8</button>\r\n                <button className=\"number\" onClick={() => handle_number('9')}>9</button>                \r\n                <button  className=\"operator\" onClick={()=> handle_operator('X')}>X</button>\r\n            </div>\r\n            <div className=\"button_row\">\r\n                <button className=\"number\" onClick={() => handle_number('4')}>4</button>\r\n                <button className=\"number\" onClick={() => handle_number('5')}>5</button>\r\n                <button className=\"number\" onClick={() => handle_number('6')}>6</button>\r\n                <button className=\"operator\" onClick={()=> handle_operator('-')}>-</button>\r\n            </div>\r\n            <div className=\"button_row\">\r\n                <button className=\"number\" onClick={() => handle_number('1')}>1</button>\r\n                <button className=\"number\" onClick={() => handle_number('2')}>2</button>\r\n                <button className=\"number\" onClick={() => handle_number('3')}>3</button>                 \r\n                <button className=\"operator\" onClick={()=> handle_operator('+')}>+</button>\r\n            </div>\r\n            <div className=\"button_row\">\r\n                <button className=\"number\" onClick={() => handle_number('0')}>0</button>\r\n                <button className=\"number\" onClick={() => handle_number('.')}>.</button>\r\n                <button className=\"number\" onClick={handle_parenthesis}>()</button>\r\n                <button className=\"equal\" onClick={handler_equal}>=</button>\r\n                \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Calculator;","import './App.css';\nimport Calculator from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"title\">Simple Calculator</div>\n      <div className=\"calculator\">\n        <Calculator/>\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}